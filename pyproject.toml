[tool.poetry]
name = "bertlv"
version = "0.2.4"
description = "Python library for BER-TLV en-/decoding."
license = "BSD-3-Clause"
authors = ["Philip Sch√∂mig <philip.schoemig@posteo.de>"]
readme = "README.rst"
repository = "https://github.com/philipschoemig/BER-TLV"
keywords = ["BER", "TLV"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Communications",
]
packages = [
    { include = "bertlv", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.6.2"
anytree = "^2.8.0"

# formatters and linters
bandit = {version = "^1.6.2", optional = true}
black = {version = "^19.10b0", optional = true}
doc8 = {version = "^0.8.1", optional = true}
flake8-bugbear = {version = "^20.1.4", optional = true}
flake8-typing-imports = {version = "^1.9.0", optional = true}
flakehell = {version = "^0.5.0", optional = true}
isort = {version = "^4.3.21", optional = true}
pylint = {version = "^2.5.3", optional = true}

# documentation
sphinx = {version = "^3.1.1", optional = true}

# unit tests
pytest = {version = "^5.4.3", optional = true}
pytest-cov = {version = "^2.10.0", optional = true}

# others
bump2version = {version = "^1.0.0", optional = true}
pre-commit = {version = "^2.5.1", optional = true}
tox = {version = "^3.15.2", optional = true}

[tool.poetry.extras]
dev = [
    "black",
    "bump2version",
    "pytest",
    "pytest-cov",
    "tox"
]
checks = [
    "pre-commit",
    "bandit",
    "black",
    "doc8",
    "flake8-bugbear",
    "flake8-typing-imports",
    "flakehell",
    "isort",
    "pylint"
]
docs = [
    "sphinx"
]
tests = [
    "pytest",
    "pytest-cov"
]

[tool.poetry.scripts]
bertlv = 'bertlv.__main__:main'


[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"


[tool.black]
line-length = 88
target-version = ["py36"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.idea
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build
  | build
  | dist
)/
'''


[tool.flakehell]
exclude = [
    ".eggs",
    ".git",
    ".idea",
    ".mypy_cache",
    ".nox",
    ".tox",
    ".venv",
    "_build",
    "build",
    "dist",
]
format = "grouped"
show_source = true

[tool.flakehell.plugins]
"flake8-*" = ["+*"]
flake8-typing-imports = ["+*", "-TYP001"]
mccabe = ["+*"]
pycodestyle = ["+*", "-E203", "-E501", "-W503"]
pyflakes = ["+*"]
#pylint = ["+*"]

[tool.flakehell.exceptions."tests/"]
pylint = ["-C0116"]


[tool.isort]
line_length = 88
multi_line_output = 3
use_parentheses = true
lines_between_types = 1
include_trailing_comma = true


[tool.pylint.master]
ignore = ["conf.py"]
fail-under = "10"
jobs = "0"  # Auto-detect the number of processors

[tool.pylint.basic]
good-names = ["e", "fp", "_"]

[tool.pylint.messages_control]
disable = """,
    bad-continuation,
    no-self-use,
    """


[tool.pytest.ini_options]
junit_family = "xunit2"
testpaths = [
    "tests",
]
