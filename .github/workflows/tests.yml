name: Tests

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  tests:
    name: Tests ${{ matrix.os }} / ${{ matrix.python-version }} / Poetry ${{ matrix.poetry-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: [3.7, 3.8]
        poetry-version: [1.1.3]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get full python version
      id: full-python-version
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
    - name: Set up Poetry ${{ matrix.poetry-version }}
      uses: abatilo/actions-poetry@v2.2.0
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Set up cache
      uses: actions/cache@v2.1.4
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-poetry${{ matrix.poetry-version }}-${{ hashFiles('poetry.lock') }}
    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv
    - name: Install dependencies
      run: poetry install -E basis
    - name: Run unit-tests
      run: poetry run tox -e py
